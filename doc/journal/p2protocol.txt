VARS:
+other_version = none [37, 151]
+other_sub_version = sub_version[:512]                     [152]
+other_services = services [153]
+connected2 = False [38, 164 = True[handle_version]]
+factory = ? [41]
connection_lost_event = variable.Event() [43]
+addr = (self.transport.getPeer().host, self.transport.getPeer().port) [45]
+timeout_delayed = таймер для метода _connect_timeout [66, 83]
get_shares = deferral.GenericDeferrer; (?) некая корутина, которая выполняет send_sharereq с timeout = 15 [68]
+remote_tx_hashes = set() # view of peer's known_txs # not actually initially empty, but sending txs instead of tx hashes won't hurt [75]
remote_remembered_txs_size = 0 [76]

+remembered_txs = {} # view of peer's mining_txs [78]
+remembered_txs_size = 0 [79]
+self.known_txs_cache = {} [80]

transport = ? [socket???] 
+node = ?
+nonce = type(?) [163]

_____________________________________________________________________________________
METHODS:
+connectionMade [40]
 _connect_timeout [82]
packetReceived #использует packetreceived базового класса [87]
badPeerHappened [96]
 _timeout [102]
sendAdvertisement [107]
+handle_version [144]
handle_ping [249]
handle_addrme [256]
handle_addrs [282]
handle_getaddrs [291]
handle_shares [309] 
sendShares [341]
handle_forget_tx [394]
handle_sharereply [407]
handle_bestblock [418]
handle_have_tx [425]
handle_losing_tx [433]
handle_remember_tx [446]
handle_forget_tx [493]
connectionLost [500] #todo: create as abstract method in base class?
do_ping [516]